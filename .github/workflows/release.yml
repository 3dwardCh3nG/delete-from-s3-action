name: Release pipeline

on:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main
permissions:
  id-token: write
  contents: write

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: yarn
      - name: Install Dependencies
        id: yarn-ci
        run: yarn
      - name: Check Format
        id: yarn-format-check
        run: yarn format:check
      - name: Lint
        id: yarn-lint
        run: yarn lint
      - name: Test
        id: yarn-ci-test
        run: yarn ci-test
      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@v2.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.PIPELINE_GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  release:
    name: generate-version
    runs-on: ubuntu-latest
    environment: release
    needs: [ code-analysis, test-typescript ]
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v7.0.5
      - name: checkout
        uses: actions/checkout@v3.6.0
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Set up environment
        if: |
          github.ref == 'refs/heads/develop' ||
          github.ref == 'refs/heads/next' ||
          github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{secrets.PIPELINE_GITHUB_TOKEN}}
        run: |
          yarn install
      - name: Generate App Version
        if: |
          github.ref == 'refs/heads/next' ||
          github.ref == 'refs/heads/main'
        env:
          GH_TOKEN: ${{secrets.PIPELINE_GITHUB_TOKEN}}
        shell: bash
        run: bash ./scripts/generate-version.sh ${{ steps.branch-name.outputs.current_branch }}
